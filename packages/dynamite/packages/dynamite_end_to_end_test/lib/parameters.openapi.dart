// OpenAPI client generated by Dynamite. Do not manually edit this file.

// ignore_for_file: camel_case_extensions, camel_case_types, cascade_invocations
// ignore_for_file: discarded_futures
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names, public_member_api_docs
// ignore_for_file: unreachable_switch_case, unused_element

/// parameters test Version: 0.0.1.
library; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'dart:typed_data';

import 'package:built_collection/built_collection.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/json_object.dart';
import 'package:built_value/serializer.dart';
import 'package:built_value/standard_json_plugin.dart' as _i7;
import 'package:dynamite_runtime/built_value.dart' as _i6;
import 'package:dynamite_runtime/http_client.dart' as _i1;
import 'package:dynamite_runtime/models.dart';
import 'package:dynamite_runtime/utils.dart' as _i4;
import 'package:http/http.dart' as _i3;
import 'package:meta/meta.dart' as _i2;
import 'package:uri/uri.dart' as _i5;

part 'parameters.openapi.g.dart';

class $Client extends _i1.DynamiteClient {
  /// Creates a new `DynamiteClient` for untagged requests.
  $Client(super.baseURL, {super.httpClient});

  /// Creates a new [$Client] from another [client].
  $Client.fromClient(_i1.DynamiteClient client)
      : super(client.baseURL, httpClient: client.httpClient, authentications: client.authentications);

  /// Builds a serializer to parse the response of [$$get_Request].
  @_i2.experimental
  _i1.DynamiteSerializer<JsonObject, void> $$get_Serializer() => _i1.DynamiteSerializer(
        bodyType: const FullType(JsonObject),
        headersType: null,
        serializers: _$jsonSerializers,
        validStatuses: const {200},
      );

  /// Returns a `DynamiteRequest` backing the [$get] operation.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Parameters:
  ///   * [contentString]
  ///   * [contentParameter]
  ///   * [array]
  ///   * [arrayString]
  ///   * [$bool]
  ///   * [string]
  ///   * [stringBinary]
  ///   * [$int]
  ///   * [$double]
  ///   * [$num]
  ///   * [object]
  ///   * [oneOf]
  ///   * [anyOf]
  ///   * [enumPattern]
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [$get] for a method executing this request and parsing the response.
  ///  * [$$get_Serializer] for a converter to parse the `Response` from an executed this request.
  @_i2.experimental
  _i3.Request $$get_Request({
    ContentString<BuiltMap<String, JsonObject>>? contentString,
    ContentString<BuiltMap<String, JsonObject>>? contentParameter,
    BuiltList<JsonObject>? array,
    BuiltList<String>? arrayString,
    bool? $bool,
    String? string,
    Uint8List? stringBinary,
    int? $int,
    double? $double,
    num? $num,
    JsonObject? object,
    GetOneOf? oneOf,
    GetAnyOf? anyOf,
    GetEnumPattern? enumPattern,
  }) {
    final _parameters = <String, Object?>{};
    final __contentString = _$jsonSerializers.serialize(
      contentString,
      specifiedType: const FullType(ContentString, [
        FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
      ]),
    );
    _parameters['content_string'] = __contentString;

    final __contentParameter = _$jsonSerializers.serialize(
      contentParameter,
      specifiedType: const FullType(ContentString, [
        FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
      ]),
    );
    _parameters['content_parameter'] = __contentParameter;

    final __array = _$jsonSerializers.serialize(
      array,
      specifiedType: const FullType(BuiltList, [FullType(JsonObject)]),
    );
    _parameters['array'] = __array;

    final __arrayString = _$jsonSerializers.serialize(
      arrayString,
      specifiedType: const FullType(BuiltList, [FullType(String)]),
    );
    _parameters['array_string'] = __arrayString;

    final __$bool = _$jsonSerializers.serialize($bool, specifiedType: const FullType(bool));
    _parameters['bool'] = __$bool;

    final __string = _$jsonSerializers.serialize(string, specifiedType: const FullType(String));
    _parameters['string'] = __string;

    final __stringBinary = _$jsonSerializers.serialize(stringBinary, specifiedType: const FullType(Uint8List));
    _parameters['string_binary'] = __stringBinary;

    final __$int = _$jsonSerializers.serialize($int, specifiedType: const FullType(int));
    _parameters['int'] = __$int;

    final __$double = _$jsonSerializers.serialize($double, specifiedType: const FullType(double));
    _parameters['double'] = __$double;

    final __$num = _$jsonSerializers.serialize($num, specifiedType: const FullType(num));
    _parameters['num'] = __$num;

    final __object = _$jsonSerializers.serialize(object, specifiedType: const FullType(JsonObject));
    _parameters['object'] = __object;

    final __oneOf = _$jsonSerializers.serialize(oneOf, specifiedType: const FullType(GetOneOf));
    _parameters['oneOf'] = __oneOf;

    final __anyOf = _$jsonSerializers.serialize(anyOf, specifiedType: const FullType(GetAnyOf));
    _parameters['anyOf'] = __anyOf;

    final __enumPattern = _$jsonSerializers.serialize(enumPattern, specifiedType: const FullType(GetEnumPattern));
    _i4.checkString(__enumPattern, 'enumPattern', pattern: RegExp('[a-z]'));
    _parameters['enum_pattern'] = __enumPattern;

    final _path = _i5.UriTemplate(
      '/{?content_string*,content_parameter*,array*,array_string*,bool*,string*,string_binary*,int*,double*,num*,object*,oneOf*,anyOf*,enum_pattern*}',
    ).expand(_parameters);
    final _uri = Uri.parse('$baseURL$_path');
    final _request = _i3.Request('get', _uri);
    _request.headers['Accept'] = 'application/json';
    return _request;
  }

  /// Returns a [Future] containing a `DynamiteResponse` with the status code, deserialized body and headers.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Parameters:
  ///   * [contentString]
  ///   * [contentParameter]
  ///   * [array]
  ///   * [arrayString]
  ///   * [$bool]
  ///   * [string]
  ///   * [stringBinary]
  ///   * [$int]
  ///   * [$double]
  ///   * [$num]
  ///   * [object]
  ///   * [oneOf]
  ///   * [anyOf]
  ///   * [enumPattern]
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [$$get_Request] for the request send by this method.
  ///  * [$$get_Serializer] for a converter to parse the `Response` from an executed request.
  Future<_i1.DynamiteResponse<JsonObject, void>> $get({
    ContentString<BuiltMap<String, JsonObject>>? contentString,
    ContentString<BuiltMap<String, JsonObject>>? contentParameter,
    BuiltList<JsonObject>? array,
    BuiltList<String>? arrayString,
    bool? $bool,
    String? string,
    Uint8List? stringBinary,
    int? $int,
    double? $double,
    num? $num,
    JsonObject? object,
    GetOneOf? oneOf,
    GetAnyOf? anyOf,
    GetEnumPattern? enumPattern,
  }) async {
    final _request = $$get_Request(
      contentString: contentString,
      contentParameter: contentParameter,
      array: array,
      arrayString: arrayString,
      $bool: $bool,
      string: string,
      stringBinary: stringBinary,
      $int: $int,
      $double: $double,
      $num: $num,
      object: object,
      oneOf: oneOf,
      anyOf: anyOf,
      enumPattern: enumPattern,
    );
    final _streamedResponse = await httpClient.send(_request);
    final _response = await _i3.Response.fromStream(_streamedResponse);

    final _serializer = $$get_Serializer();
    return _i1.ResponseConverter<JsonObject, void>(_serializer).convert(_response);
  }

  /// Builds a serializer to parse the response of [$getDefaults_Request].
  @_i2.experimental
  _i1.DynamiteSerializer<JsonObject, void> $getDefaults_Serializer() => _i1.DynamiteSerializer(
        bodyType: const FullType(JsonObject),
        headersType: null,
        serializers: _$jsonSerializers,
        validStatuses: const {200},
      );

  /// Returns a `DynamiteRequest` backing the [getDefaults] operation.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Parameters:
  ///   * [contentString] Defaults to `"\"{}\""`.
  ///   * [contentParameter]
  ///   * [array] Defaults to `["default-item",true,1.0]`.
  ///   * [arrayString] Defaults to `["default-item","item"]`.
  ///   * [$bool] Defaults to `true`.
  ///   * [string] Defaults to `"default"`.
  ///   * [stringBinary] Defaults to `""`.
  ///   * [$int] Defaults to `1`.
  ///   * [$double] Defaults to `1.0`.
  ///   * [$num] Defaults to `0`.
  ///   * [object] Defaults to `{"list":["list"],"string":"default-item","bool":true,"num":1.0}`.
  ///   * [oneOf] Defaults to `false`.
  ///   * [anyOf] Defaults to `"default-value"`.
  ///   * [enumPattern] Defaults to `"a"`.
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [getDefaults] for a method executing this request and parsing the response.
  ///  * [$getDefaults_Serializer] for a converter to parse the `Response` from an executed this request.
  @_i2.experimental
  _i3.Request $getDefaults_Request({
    ContentString<BuiltMap<String, JsonObject>>? contentString,
    ContentString<BuiltMap<String, JsonObject>>? contentParameter,
    BuiltList<JsonObject>? array,
    BuiltList<String>? arrayString,
    bool? $bool,
    String? string,
    Uint8List? stringBinary,
    int? $int,
    double? $double,
    num? $num,
    JsonObject? object,
    GetDefaultsOneOf? oneOf,
    GetDefaultsAnyOf? anyOf,
    GetDefaultsEnumPattern? enumPattern,
  }) {
    final _parameters = <String, Object?>{};
    var __contentString = _$jsonSerializers.serialize(
      contentString,
      specifiedType: const FullType(ContentString, [
        FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
      ]),
    );
    __contentString ??= '"{}"';
    _parameters['content_string'] = __contentString;

    final __contentParameter = _$jsonSerializers.serialize(
      contentParameter,
      specifiedType: const FullType(ContentString, [
        FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
      ]),
    );
    _parameters['content_parameter'] = __contentParameter;

    var __array = _$jsonSerializers.serialize(array, specifiedType: const FullType(BuiltList, [FullType(JsonObject)]));
    __array ??= const ['default-item', true, 1.0];
    _parameters['array'] = __array;

    var __arrayString = _$jsonSerializers.serialize(
      arrayString,
      specifiedType: const FullType(BuiltList, [FullType(String)]),
    );
    __arrayString ??= const ['default-item', 'item'];
    _parameters['array_string'] = __arrayString;

    var __$bool = _$jsonSerializers.serialize($bool, specifiedType: const FullType(bool));
    __$bool ??= true;
    _parameters['bool'] = __$bool;

    var __string = _$jsonSerializers.serialize(string, specifiedType: const FullType(String));
    __string ??= 'default';
    _parameters['string'] = __string;

    var __stringBinary = _$jsonSerializers.serialize(stringBinary, specifiedType: const FullType(Uint8List));
    __stringBinary ??= '';
    _parameters['string_binary'] = __stringBinary;

    var __$int = _$jsonSerializers.serialize($int, specifiedType: const FullType(int));
    __$int ??= 1;
    _parameters['int'] = __$int;

    var __$double = _$jsonSerializers.serialize($double, specifiedType: const FullType(double));
    __$double ??= 1.0;
    _parameters['double'] = __$double;

    var __$num = _$jsonSerializers.serialize($num, specifiedType: const FullType(num));
    __$num ??= 0;
    _parameters['num'] = __$num;

    var __object = _$jsonSerializers.serialize(object, specifiedType: const FullType(JsonObject));
    __object ??= const {
      'list': ['list'],
      'string': 'default-item',
      'bool': true,
      'num': 1.0,
    };
    _parameters['object'] = __object;

    var __oneOf = _$jsonSerializers.serialize(oneOf, specifiedType: const FullType(GetDefaultsOneOf));
    __oneOf ??= false;
    _parameters['oneOf'] = __oneOf;

    var __anyOf = _$jsonSerializers.serialize(anyOf, specifiedType: const FullType(GetDefaultsAnyOf));
    __anyOf ??= 'default-value';
    _parameters['anyOf'] = __anyOf;

    var __enumPattern = _$jsonSerializers.serialize(enumPattern, specifiedType: const FullType(GetDefaultsEnumPattern));
    __enumPattern ??= 'a';
    _i4.checkString(__enumPattern, 'enumPattern', pattern: RegExp('[a-z]'));
    _parameters['enum_pattern'] = __enumPattern;

    final _path = _i5.UriTemplate(
      '/defaults{?content_string*,content_parameter*,array*,array_string*,bool*,string*,string_binary*,int*,double*,num*,object*,oneOf*,anyOf*,enum_pattern*}',
    ).expand(_parameters);
    final _uri = Uri.parse('$baseURL$_path');
    final _request = _i3.Request('get', _uri);
    _request.headers['Accept'] = 'application/json';
    return _request;
  }

  /// Returns a [Future] containing a `DynamiteResponse` with the status code, deserialized body and headers.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Parameters:
  ///   * [contentString] Defaults to `"\"{}\""`.
  ///   * [contentParameter]
  ///   * [array] Defaults to `["default-item",true,1.0]`.
  ///   * [arrayString] Defaults to `["default-item","item"]`.
  ///   * [$bool] Defaults to `true`.
  ///   * [string] Defaults to `"default"`.
  ///   * [stringBinary] Defaults to `""`.
  ///   * [$int] Defaults to `1`.
  ///   * [$double] Defaults to `1.0`.
  ///   * [$num] Defaults to `0`.
  ///   * [object] Defaults to `{"list":["list"],"string":"default-item","bool":true,"num":1.0}`.
  ///   * [oneOf] Defaults to `false`.
  ///   * [anyOf] Defaults to `"default-value"`.
  ///   * [enumPattern] Defaults to `"a"`.
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [$getDefaults_Request] for the request send by this method.
  ///  * [$getDefaults_Serializer] for a converter to parse the `Response` from an executed request.
  Future<_i1.DynamiteResponse<JsonObject, void>> getDefaults({
    ContentString<BuiltMap<String, JsonObject>>? contentString,
    ContentString<BuiltMap<String, JsonObject>>? contentParameter,
    BuiltList<JsonObject>? array,
    BuiltList<String>? arrayString,
    bool? $bool,
    String? string,
    Uint8List? stringBinary,
    int? $int,
    double? $double,
    num? $num,
    JsonObject? object,
    GetDefaultsOneOf? oneOf,
    GetDefaultsAnyOf? anyOf,
    GetDefaultsEnumPattern? enumPattern,
  }) async {
    final _request = $getDefaults_Request(
      contentString: contentString,
      contentParameter: contentParameter,
      array: array,
      arrayString: arrayString,
      $bool: $bool,
      string: string,
      stringBinary: stringBinary,
      $int: $int,
      $double: $double,
      $num: $num,
      object: object,
      oneOf: oneOf,
      anyOf: anyOf,
      enumPattern: enumPattern,
    );
    final _streamedResponse = await httpClient.send(_request);
    final _response = await _i3.Response.fromStream(_streamedResponse);

    final _serializer = $getDefaults_Serializer();
    return _i1.ResponseConverter<JsonObject, void>(_serializer).convert(_response);
  }

  /// Builds a serializer to parse the response of [$getHeaders_Request].
  @_i2.experimental
  _i1.DynamiteSerializer<JsonObject, void> $getHeaders_Serializer() => _i1.DynamiteSerializer(
        bodyType: const FullType(JsonObject),
        headersType: null,
        serializers: _$jsonSerializers,
        validStatuses: const {200},
      );

  /// Returns a `DynamiteRequest` backing the [getHeaders] operation.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Parameters:
  ///   * [contentString]
  ///   * [contentParameter]
  ///   * [array]
  ///   * [arrayString]
  ///   * [$bool]
  ///   * [string]
  ///   * [stringBinary]
  ///   * [$int]
  ///   * [$double]
  ///   * [$num]
  ///   * [object]
  ///   * [oneOf]
  ///   * [anyOf]
  ///   * [enumPattern]
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [getHeaders] for a method executing this request and parsing the response.
  ///  * [$getHeaders_Serializer] for a converter to parse the `Response` from an executed this request.
  @_i2.experimental
  _i3.Request $getHeaders_Request({
    ContentString<BuiltMap<String, JsonObject>>? contentString,
    ContentString<BuiltMap<String, JsonObject>>? contentParameter,
    BuiltList<JsonObject>? array,
    BuiltList<String>? arrayString,
    bool? $bool,
    String? string,
    Uint8List? stringBinary,
    int? $int,
    double? $double,
    num? $num,
    JsonObject? object,
    GetHeadersOneOf? oneOf,
    GetHeadersAnyOf? anyOf,
    GetHeadersEnumPattern? enumPattern,
  }) {
    const _path = '/headers';
    final _uri = Uri.parse('$baseURL$_path');
    final _request = _i3.Request('get', _uri);
    _request.headers['Accept'] = 'application/json';
    final __contentString = _$jsonSerializers.serialize(
      contentString,
      specifiedType: const FullType(ContentString, [
        FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
      ]),
    );
    if (__contentString != null) {
      _request.headers['content_string'] = const _i4.HeaderEncoder().convert(__contentString);
    }

    final __contentParameter = _$jsonSerializers.serialize(
      contentParameter,
      specifiedType: const FullType(ContentString, [
        FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
      ]),
    );
    if (__contentParameter != null) {
      _request.headers['content_parameter'] = const _i4.HeaderEncoder().convert(__contentParameter);
    }

    final __array = _$jsonSerializers.serialize(
      array,
      specifiedType: const FullType(BuiltList, [FullType(JsonObject)]),
    );
    if (__array != null) {
      _request.headers['array'] = const _i4.HeaderEncoder().convert(__array);
    }

    final __arrayString = _$jsonSerializers.serialize(
      arrayString,
      specifiedType: const FullType(BuiltList, [FullType(String)]),
    );
    if (__arrayString != null) {
      _request.headers['array_string'] = const _i4.HeaderEncoder().convert(__arrayString);
    }

    final __$bool = _$jsonSerializers.serialize($bool, specifiedType: const FullType(bool));
    if (__$bool != null) {
      _request.headers['bool'] = const _i4.HeaderEncoder().convert(__$bool);
    }

    final __string = _$jsonSerializers.serialize(string, specifiedType: const FullType(String));
    if (__string != null) {
      _request.headers['string'] = const _i4.HeaderEncoder().convert(__string);
    }

    final __stringBinary = _$jsonSerializers.serialize(stringBinary, specifiedType: const FullType(Uint8List));
    if (__stringBinary != null) {
      _request.headers['string_binary'] = const _i4.HeaderEncoder().convert(__stringBinary);
    }

    final __$int = _$jsonSerializers.serialize($int, specifiedType: const FullType(int));
    if (__$int != null) {
      _request.headers['int'] = const _i4.HeaderEncoder().convert(__$int);
    }

    final __$double = _$jsonSerializers.serialize($double, specifiedType: const FullType(double));
    if (__$double != null) {
      _request.headers['double'] = const _i4.HeaderEncoder().convert(__$double);
    }

    final __$num = _$jsonSerializers.serialize($num, specifiedType: const FullType(num));
    if (__$num != null) {
      _request.headers['num'] = const _i4.HeaderEncoder().convert(__$num);
    }

    final __object = _$jsonSerializers.serialize(object, specifiedType: const FullType(JsonObject));
    if (__object != null) {
      _request.headers['object'] = const _i4.HeaderEncoder().convert(__object);
    }

    final __oneOf = _$jsonSerializers.serialize(oneOf, specifiedType: const FullType(GetHeadersOneOf));
    if (__oneOf != null) {
      _request.headers['oneOf'] = const _i4.HeaderEncoder().convert(__oneOf);
    }

    final __anyOf = _$jsonSerializers.serialize(anyOf, specifiedType: const FullType(GetHeadersAnyOf));
    if (__anyOf != null) {
      _request.headers['anyOf'] = const _i4.HeaderEncoder().convert(__anyOf);
    }

    final __enumPattern = _$jsonSerializers.serialize(
      enumPattern,
      specifiedType: const FullType(GetHeadersEnumPattern),
    );
    _i4.checkString(__enumPattern, 'enumPattern', pattern: RegExp('[a-z]'));
    if (__enumPattern != null) {
      _request.headers['enum_pattern'] = const _i4.HeaderEncoder().convert(__enumPattern);
    }

    return _request;
  }

  /// Returns a [Future] containing a `DynamiteResponse` with the status code, deserialized body and headers.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Parameters:
  ///   * [contentString]
  ///   * [contentParameter]
  ///   * [array]
  ///   * [arrayString]
  ///   * [$bool]
  ///   * [string]
  ///   * [stringBinary]
  ///   * [$int]
  ///   * [$double]
  ///   * [$num]
  ///   * [object]
  ///   * [oneOf]
  ///   * [anyOf]
  ///   * [enumPattern]
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [$getHeaders_Request] for the request send by this method.
  ///  * [$getHeaders_Serializer] for a converter to parse the `Response` from an executed request.
  Future<_i1.DynamiteResponse<JsonObject, void>> getHeaders({
    ContentString<BuiltMap<String, JsonObject>>? contentString,
    ContentString<BuiltMap<String, JsonObject>>? contentParameter,
    BuiltList<JsonObject>? array,
    BuiltList<String>? arrayString,
    bool? $bool,
    String? string,
    Uint8List? stringBinary,
    int? $int,
    double? $double,
    num? $num,
    JsonObject? object,
    GetHeadersOneOf? oneOf,
    GetHeadersAnyOf? anyOf,
    GetHeadersEnumPattern? enumPattern,
  }) async {
    final _request = $getHeaders_Request(
      contentString: contentString,
      contentParameter: contentParameter,
      array: array,
      arrayString: arrayString,
      $bool: $bool,
      string: string,
      stringBinary: stringBinary,
      $int: $int,
      $double: $double,
      $num: $num,
      object: object,
      oneOf: oneOf,
      anyOf: anyOf,
      enumPattern: enumPattern,
    );
    final _streamedResponse = await httpClient.send(_request);
    final _response = await _i3.Response.fromStream(_streamedResponse);

    final _serializer = $getHeaders_Serializer();
    return _i1.ResponseConverter<JsonObject, void>(_serializer).convert(_response);
  }

  /// Builds a serializer to parse the response of [$getPathParameter_Request].
  @_i2.experimental
  _i1.DynamiteSerializer<JsonObject, void> $getPathParameter_Serializer() => _i1.DynamiteSerializer(
        bodyType: const FullType(JsonObject),
        headersType: null,
        serializers: _$jsonSerializers,
        validStatuses: const {200},
      );

  /// Returns a `DynamiteRequest` backing the [getPathParameter] operation.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [getPathParameter] for a method executing this request and parsing the response.
  ///  * [$getPathParameter_Serializer] for a converter to parse the `Response` from an executed this request.
  @_i2.experimental
  _i3.Request $getPathParameter_Request({required String pathParameter}) {
    final _parameters = <String, Object?>{};
    final __pathParameter = _$jsonSerializers.serialize(pathParameter, specifiedType: const FullType(String));
    _parameters['path_parameter'] = __pathParameter;

    final _path = _i5.UriTemplate('/{path_parameter}').expand(_parameters);
    final _uri = Uri.parse('$baseURL$_path');
    final _request = _i3.Request('get', _uri);
    _request.headers['Accept'] = 'application/json';
    return _request;
  }

  /// Returns a [Future] containing a `DynamiteResponse` with the status code, deserialized body and headers.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [$getPathParameter_Request] for the request send by this method.
  ///  * [$getPathParameter_Serializer] for a converter to parse the `Response` from an executed request.
  Future<_i1.DynamiteResponse<JsonObject, void>> getPathParameter({required String pathParameter}) async {
    final _request = $getPathParameter_Request(pathParameter: pathParameter);
    final _streamedResponse = await httpClient.send(_request);
    final _response = await _i3.Response.fromStream(_streamedResponse);

    final _serializer = $getPathParameter_Serializer();
    return _i1.ResponseConverter<JsonObject, void>(_serializer).convert(_response);
  }

  /// Builds a serializer to parse the response of [$getNamingCollisions_Request].
  @_i2.experimental
  _i1.DynamiteSerializer<JsonObject, void> $getNamingCollisions_Serializer() => _i1.DynamiteSerializer(
        bodyType: const FullType(JsonObject),
        headersType: null,
        serializers: _$jsonSerializers,
        validStatuses: const {200},
      );

  /// Returns a `DynamiteRequest` backing the [getNamingCollisions] operation.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [getNamingCollisions] for a method executing this request and parsing the response.
  ///  * [$getNamingCollisions_Serializer] for a converter to parse the `Response` from an executed this request.
  @_i2.experimental
  _i3.Request $getNamingCollisions_Request({
    required String jsonSerializers,
    required String serializers,
    required String body,
    required String parameters,
    required String headers,
  }) {
    final _parameters = <String, Object?>{};
    final __jsonSerializers = _$jsonSerializers.serialize(jsonSerializers, specifiedType: const FullType(String));
    _parameters['%24jsonSerializers'] = __jsonSerializers;

    final _path = _i5.UriTemplate('/naming_collisions{?%24jsonSerializers*}').expand(_parameters);
    final _uri = Uri.parse('$baseURL$_path');
    final _request = _i3.Request('get', _uri);
    _request.headers['Accept'] = 'application/json';
    final __serializers = _$jsonSerializers.serialize(serializers, specifiedType: const FullType(String));
    if (__serializers != null) {
      _request.headers['%24serializers'] = const _i4.HeaderEncoder().convert(__serializers);
    }

    final __body = _$jsonSerializers.serialize(body, specifiedType: const FullType(String));
    if (__body != null) {
      _request.headers['_body'] = const _i4.HeaderEncoder().convert(__body);
    }

    final __parameters = _$jsonSerializers.serialize(parameters, specifiedType: const FullType(String));
    if (__parameters != null) {
      _request.headers['_parameters'] = const _i4.HeaderEncoder().convert(__parameters);
    }

    final __headers = _$jsonSerializers.serialize(headers, specifiedType: const FullType(String));
    if (__headers != null) {
      _request.headers['_headers'] = const _i4.HeaderEncoder().convert(__headers);
    }

    return _request;
  }

  /// Returns a [Future] containing a `DynamiteResponse` with the status code, deserialized body and headers.
  /// Throws a `DynamiteApiException` if the API call does not return an expected status code.
  ///
  /// Status codes:
  ///   * 200
  ///
  /// See:
  ///  * [$getNamingCollisions_Request] for the request send by this method.
  ///  * [$getNamingCollisions_Serializer] for a converter to parse the `Response` from an executed request.
  Future<_i1.DynamiteResponse<JsonObject, void>> getNamingCollisions({
    required String jsonSerializers,
    required String serializers,
    required String body,
    required String parameters,
    required String headers,
  }) async {
    final _request = $getNamingCollisions_Request(
      jsonSerializers: jsonSerializers,
      serializers: serializers,
      body: body,
      parameters: parameters,
      headers: headers,
    );
    final _streamedResponse = await httpClient.send(_request);
    final _response = await _i3.Response.fromStream(_streamedResponse);

    final _serializer = $getNamingCollisions_Serializer();
    return _i1.ResponseConverter<JsonObject, void>(_serializer).convert(_response);
  }
}

typedef GetOneOf = ({bool? $bool, String? string});
typedef GetAnyOf = ({bool? $bool, String? string});

class GetEnumPattern extends EnumClass {
  const GetEnumPattern._(super.name);

  /// `a`
  static const GetEnumPattern a = _$getEnumPatternA;

  /// `0`
  @BuiltValueEnumConst(wireName: '0')
  static const GetEnumPattern $0 = _$getEnumPattern$0;

  /// Returns a set with all values this enum contains.
  static BuiltSet<GetEnumPattern> get values => _$getEnumPatternValues;

  /// Returns the enum value associated to the [name].
  static GetEnumPattern valueOf(String name) => _$valueOfGetEnumPattern(name);

  /// Returns the serialized value of this enum value.
  String get value => _$jsonSerializers.serializeWith(serializer, this)! as String;

  /// Serializer for GetEnumPattern.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetEnumPattern> get serializer => const _$GetEnumPatternSerializer();
}

class _$GetEnumPatternSerializer implements PrimitiveSerializer<GetEnumPattern> {
  const _$GetEnumPatternSerializer();

  static const Map<GetEnumPattern, Object> _toWire = <GetEnumPattern, Object>{
    GetEnumPattern.a: 'a',
    GetEnumPattern.$0: '0',
  };

  static const Map<Object, GetEnumPattern> _fromWire = <Object, GetEnumPattern>{
    'a': GetEnumPattern.a,
    '0': GetEnumPattern.$0,
  };

  @override
  Iterable<Type> get types => const [GetEnumPattern];

  @override
  String get wireName => 'GetEnumPattern';

  @override
  Object serialize(Serializers serializers, GetEnumPattern object, {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object]!;

  @override
  GetEnumPattern deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) =>
      _fromWire[serialized]!;
}

typedef GetDefaultsOneOf = ({bool? $bool, String? string});
typedef GetDefaultsAnyOf = ({bool? $bool, String? string});

class GetDefaultsEnumPattern extends EnumClass {
  const GetDefaultsEnumPattern._(super.name);

  /// `a`
  static const GetDefaultsEnumPattern a = _$getDefaultsEnumPatternA;

  /// `0`
  @BuiltValueEnumConst(wireName: '0')
  static const GetDefaultsEnumPattern $0 = _$getDefaultsEnumPattern$0;

  /// Returns a set with all values this enum contains.
  static BuiltSet<GetDefaultsEnumPattern> get values => _$getDefaultsEnumPatternValues;

  /// Returns the enum value associated to the [name].
  static GetDefaultsEnumPattern valueOf(String name) => _$valueOfGetDefaultsEnumPattern(name);

  /// Returns the serialized value of this enum value.
  String get value => _$jsonSerializers.serializeWith(serializer, this)! as String;

  /// Serializer for GetDefaultsEnumPattern.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetDefaultsEnumPattern> get serializer => const _$GetDefaultsEnumPatternSerializer();
}

class _$GetDefaultsEnumPatternSerializer implements PrimitiveSerializer<GetDefaultsEnumPattern> {
  const _$GetDefaultsEnumPatternSerializer();

  static const Map<GetDefaultsEnumPattern, Object> _toWire = <GetDefaultsEnumPattern, Object>{
    GetDefaultsEnumPattern.a: 'a',
    GetDefaultsEnumPattern.$0: '0',
  };

  static const Map<Object, GetDefaultsEnumPattern> _fromWire = <Object, GetDefaultsEnumPattern>{
    'a': GetDefaultsEnumPattern.a,
    '0': GetDefaultsEnumPattern.$0,
  };

  @override
  Iterable<Type> get types => const [GetDefaultsEnumPattern];

  @override
  String get wireName => 'GetDefaultsEnumPattern';

  @override
  Object serialize(
    Serializers serializers,
    GetDefaultsEnumPattern object, {
    FullType specifiedType = FullType.unspecified,
  }) =>
      _toWire[object]!;

  @override
  GetDefaultsEnumPattern deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) =>
      _fromWire[serialized]!;
}

typedef GetHeadersOneOf = ({bool? $bool, String? string});
typedef GetHeadersAnyOf = ({bool? $bool, String? string});

class GetHeadersEnumPattern extends EnumClass {
  const GetHeadersEnumPattern._(super.name);

  /// `a`
  static const GetHeadersEnumPattern a = _$getHeadersEnumPatternA;

  /// `0`
  @BuiltValueEnumConst(wireName: '0')
  static const GetHeadersEnumPattern $0 = _$getHeadersEnumPattern$0;

  /// Returns a set with all values this enum contains.
  static BuiltSet<GetHeadersEnumPattern> get values => _$getHeadersEnumPatternValues;

  /// Returns the enum value associated to the [name].
  static GetHeadersEnumPattern valueOf(String name) => _$valueOfGetHeadersEnumPattern(name);

  /// Returns the serialized value of this enum value.
  String get value => _$jsonSerializers.serializeWith(serializer, this)! as String;

  /// Serializer for GetHeadersEnumPattern.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetHeadersEnumPattern> get serializer => const _$GetHeadersEnumPatternSerializer();
}

class _$GetHeadersEnumPatternSerializer implements PrimitiveSerializer<GetHeadersEnumPattern> {
  const _$GetHeadersEnumPatternSerializer();

  static const Map<GetHeadersEnumPattern, Object> _toWire = <GetHeadersEnumPattern, Object>{
    GetHeadersEnumPattern.a: 'a',
    GetHeadersEnumPattern.$0: '0',
  };

  static const Map<Object, GetHeadersEnumPattern> _fromWire = <Object, GetHeadersEnumPattern>{
    'a': GetHeadersEnumPattern.a,
    '0': GetHeadersEnumPattern.$0,
  };

  @override
  Iterable<Type> get types => const [GetHeadersEnumPattern];

  @override
  String get wireName => 'GetHeadersEnumPattern';

  @override
  Object serialize(
    Serializers serializers,
    GetHeadersEnumPattern object, {
    FullType specifiedType = FullType.unspecified,
  }) =>
      _toWire[object]!;

  @override
  GetHeadersEnumPattern deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) =>
      _fromWire[serialized]!;
}

/// Serialization extension for `GetOneOf`.
extension $GetOneOfExtension on GetOneOf {
  /// Serializer for GetOneOf.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetOneOf> get serializer => $93403da1a64cb6a7b1597c7a05e9b2beExtension._serializer;

  /// Creates a new object from the given [json] data.
  ///
  /// Use `toJson` to serialize it back into json.
  static GetOneOf fromJson(Object? json) => $93403da1a64cb6a7b1597c7a05e9b2beExtension._fromJson(json);
}

/// Serialization extension for `GetAnyOf`.
extension $GetAnyOfExtension on GetAnyOf {
  /// Serializer for GetAnyOf.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetAnyOf> get serializer => $93403da1a64cb6a7b1597c7a05e9b2beExtension._serializer;

  /// Creates a new object from the given [json] data.
  ///
  /// Use `toJson` to serialize it back into json.
  static GetAnyOf fromJson(Object? json) => $93403da1a64cb6a7b1597c7a05e9b2beExtension._fromJson(json);
}

/// Serialization extension for `GetDefaultsOneOf`.
extension $GetDefaultsOneOfExtension on GetDefaultsOneOf {
  /// Serializer for GetDefaultsOneOf.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetDefaultsOneOf> get serializer => $93403da1a64cb6a7b1597c7a05e9b2beExtension._serializer;

  /// Creates a new object from the given [json] data.
  ///
  /// Use `toJson` to serialize it back into json.
  static GetDefaultsOneOf fromJson(Object? json) => $93403da1a64cb6a7b1597c7a05e9b2beExtension._fromJson(json);
}

/// Serialization extension for `GetDefaultsAnyOf`.
extension $GetDefaultsAnyOfExtension on GetDefaultsAnyOf {
  /// Serializer for GetDefaultsAnyOf.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetDefaultsAnyOf> get serializer => $93403da1a64cb6a7b1597c7a05e9b2beExtension._serializer;

  /// Creates a new object from the given [json] data.
  ///
  /// Use `toJson` to serialize it back into json.
  static GetDefaultsAnyOf fromJson(Object? json) => $93403da1a64cb6a7b1597c7a05e9b2beExtension._fromJson(json);
}

/// Serialization extension for `GetHeadersOneOf`.
extension $GetHeadersOneOfExtension on GetHeadersOneOf {
  /// Serializer for GetHeadersOneOf.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetHeadersOneOf> get serializer => $93403da1a64cb6a7b1597c7a05e9b2beExtension._serializer;

  /// Creates a new object from the given [json] data.
  ///
  /// Use `toJson` to serialize it back into json.
  static GetHeadersOneOf fromJson(Object? json) => $93403da1a64cb6a7b1597c7a05e9b2beExtension._fromJson(json);
}

/// Serialization extension for `GetHeadersAnyOf`.
extension $GetHeadersAnyOfExtension on GetHeadersAnyOf {
  /// Serializer for GetHeadersAnyOf.
  @BuiltValueSerializer(custom: true)
  static Serializer<GetHeadersAnyOf> get serializer => $93403da1a64cb6a7b1597c7a05e9b2beExtension._serializer;

  /// Creates a new object from the given [json] data.
  ///
  /// Use `toJson` to serialize it back into json.
  static GetHeadersAnyOf fromJson(Object? json) => $93403da1a64cb6a7b1597c7a05e9b2beExtension._fromJson(json);
}

typedef _$93403da1a64cb6a7b1597c7a05e9b2be = ({bool? $bool, String? string});

/// @nodoc
// ignore: library_private_types_in_public_api
extension $93403da1a64cb6a7b1597c7a05e9b2beExtension on _$93403da1a64cb6a7b1597c7a05e9b2be {
  List<dynamic> get _values => [$bool, string];
  List<String> get _names => const [r'$bool', 'string'];

  /// {@macro Dynamite.validateOneOf}
  void validateOneOf() => _i4.validateOneOf(_values, _names);

  /// {@macro Dynamite.validateAnyOf}
  void validateAnyOf() => _i4.validateAnyOf(_values, _names);
  static Serializer<_$93403da1a64cb6a7b1597c7a05e9b2be> get _serializer =>
      const _$93403da1a64cb6a7b1597c7a05e9b2beSerializer();
  static _$93403da1a64cb6a7b1597c7a05e9b2be _fromJson(Object? json) =>
      _$jsonSerializers.deserializeWith(_serializer, json)!;

  /// Parses this object into a json like map.
  ///
  /// Use the fromJson factory to revive it again.
  Object? toJson() => _$jsonSerializers.serializeWith(_serializer, this);
}

class _$93403da1a64cb6a7b1597c7a05e9b2beSerializer implements PrimitiveSerializer<_$93403da1a64cb6a7b1597c7a05e9b2be> {
  const _$93403da1a64cb6a7b1597c7a05e9b2beSerializer();

  @override
  Iterable<Type> get types => const [_$93403da1a64cb6a7b1597c7a05e9b2be];

  @override
  String get wireName => r'_$93403da1a64cb6a7b1597c7a05e9b2be';

  @override
  Object serialize(
    Serializers serializers,
    _$93403da1a64cb6a7b1597c7a05e9b2be object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    dynamic value;
    value = object.$bool;
    if (value != null) {
      return serializers.serialize(value, specifiedType: const FullType(bool))!;
    }
    value = object.string;
    if (value != null) {
      return serializers.serialize(value, specifiedType: const FullType(String))!;
    }
    // Should not be possible after validation.
    throw StateError('Tried to serialize without any value.');
  }

  @override
  _$93403da1a64cb6a7b1597c7a05e9b2be deserialize(
    Serializers serializers,
    Object data, {
    FullType specifiedType = FullType.unspecified,
  }) {
    bool? $bool;
    try {
      $bool = serializers.deserialize(data, specifiedType: const FullType(bool))! as bool;
    } catch (_) {}
    String? string;
    try {
      string = serializers.deserialize(data, specifiedType: const FullType(String))! as String;
    } catch (_) {}
    return ($bool: $bool, string: string);
  }
}

// coverage:ignore-start
/// Serializer for all values in this library.
///
/// Serializes values into the `built_value` wire format.
/// See: [$jsonSerializers] for serializing into json.
@_i2.visibleForTesting
final Serializers $serializers = _$serializers;
final Serializers _$serializers = (Serializers().toBuilder()
      ..addBuilderFactory(
        const FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
        MapBuilder<String, JsonObject>.new,
      )
      ..addBuilderFactory(
        const FullType(ContentString, [
          FullType(BuiltMap, [FullType(String), FullType(JsonObject)]),
        ]),
        ContentStringBuilder<BuiltMap<String, JsonObject>>.new,
      )
      ..add(ContentString.serializer)
      ..addBuilderFactory(const FullType(BuiltList, [FullType(JsonObject)]), ListBuilder<JsonObject>.new)
      ..addBuilderFactory(const FullType(BuiltList, [FullType(String)]), ListBuilder<String>.new)
      ..add($93403da1a64cb6a7b1597c7a05e9b2beExtension._serializer)
      ..add(GetEnumPattern.serializer)
      ..add(GetDefaultsEnumPattern.serializer)
      ..add(GetHeadersEnumPattern.serializer))
    .build();

/// Serializer for all values in this library.
///
/// Serializes values into the json. Json serialization is more expensive than the built_value wire format.
/// See: [$serializers] for serializing into the `built_value` wire format.
@_i2.visibleForTesting
final Serializers $jsonSerializers = _$jsonSerializers;
final Serializers _$jsonSerializers = (_$serializers.toBuilder()
      ..add(_i6.DynamiteDoubleSerializer())
      ..addPlugin(_i7.StandardJsonPlugin(typesToLeaveAsList: const {_$93403da1a64cb6a7b1597c7a05e9b2be}))
      ..addPlugin(const _i6.HeaderPlugin())
      ..addPlugin(const _i6.ContentStringPlugin()))
    .build();
// coverage:ignore-end
